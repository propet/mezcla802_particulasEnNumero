##############################
###############              
# Micro Units #              
###############              
#				            
# Length      -> micron      
# Mass   	  -> picogram    
# Time 	 	  -> microsecond  
# Temperature -> Kelvin      
#                            
##############################

# Mezcla 802000

################################################

# total de particulas
variable 			Nparticles equal 22434

variable 			R_min equal 500/2
variable 			R_max equal 3200/2

################################################
# radios MgO, diametro igual al diametro del filtro que pasan
variable 			rMgO_4 equal 500/2
variable 			rMgO_5 equal 630/2
variable 			rMgO_6 equal 800/2
variable 			rMgO_7 equal 1250/2
variable 			rMgO_8 equal 1600/2
variable 			rMgO_9 equal 2500/2
variable 			rMgO_10 equal 3200/2

# porcentajes en numero de los distintos radios de MgO, 
variable            porcenMgO_4 equal 0.77756976
variable            porcenMgO_5 equal 0.0562539
variable            porcenMgO_6 equal 0.034100026
variable            porcenMgO_7 equal 0.022911651
variable            porcenMgO_8 equal 9.806543639e-6
variable            porcenMgO_9 equal 4.457519836e-5
variable            porcenMgO_10 equal 0


################################################
# radios Al2O3
variable            rAl2O3_1 equal 500/2

# porcentajes en numero de los distintos radios de Al2O3
variable 			porcenAl2O3_1 equal 0.108139431

################################################
###################################################################################################

### Initialization

# log name
variable 			log_name string log1.liggghts

# Variables

# Cylinder wall dimensions
variable 			cylin_radius equal 0.011e6

# Young Modulus, [kg*m-1*s-1]*10^-3 => [picogram*micron-1*microsecond-1]
# 250 GPa
variable 			E_MgO equal 2.5e5
variable 			E_Al2O3 equal 2.5e5
variable 			E_stainlessSteel equal 2e5

# Cohesion Energy Density, [J*m-3]*10^-3 == [kg*m-1*s-2]*10^-3 => [picogram*micron-1*microsecond-2]
# 3e6 J*m-3
variable 			CED_MgO equal 3000000e-3
variable 			CED_Al2O3 equal 3000000e-3
variable 			CED_stainlessSteel equal 3000000e-3

# Spheres, [m]*10^6 => [micron]
variable 			rho_MgO equal 3500e-3
variable 			rho_Al2O3 equal 3000e-3 
variable            rho_stainlessSteel equal 8000e-3
variable 			nu_Al2O3 equal 0.25
variable 			nu_MgO equal 0.25
variable            nu_stainlessSteel equal 0.29

# Neighbor extra distance beyond force cutoff
variable 			skin equal 2*${R_min}

# Plate, [m]*10^6 => [micron]
variable 			radius equal 0.011e6
variable 			h_plate equal 0.008e6

# Factory domain, [m]*10^6 => [micron]
variable 			z_lo2 equal ${R_max}
variable 			z_hi2 equal 2*(${z_lo2}+(${radius}^2*${h_plate})/((${radius}-${R_max})^2))
variable 			z_press equal ceil(${z_hi2}+${R_max})
variable 			R_in equal ${radius}-${R_max} 


print ${z_lo2}
print ${z_hi2}
print ${R_in}

# Simulation domain, [m]*10^6 => [micron]
variable 			dom_radius equal 0.0155e6
variable 			zlo equal -0.002e6
variable 			zhi equal ${z_press}+0.002e6
#variable 			zhi equal 0.025e6

# Plate, [m]*10^6 => [micron]
variable 			scale equal 1e3

# Gravity, [m*s-2]*10^-6 => [micron*microsecond-2]
variable 			gravity equal 9.81e-6

# Shear modulus
variable 			shear_modulus equal ${E_Al2O3}/(2*(1+${nu_Al2O3}))

# Rayleigh time [microseconds]
variable 			rayleigh_time equal 3.141592*${R_min}*(sqrt(${rho_Al2O3}/${shear_modulus})/(0.1631*${nu_Al2O3}+0.8766))

# TimeStep
variable 			timestep equal 0.1*${rayleigh_time}
print ${timestep}

# Press velocity, [m*s-1] => [micron*microsecond-1]
variable 			pressVel equal -0.2
# Press displacement [mm], hasta llegar a los 8mm de altura
variable 			press_displace equal ((${z_press}*10^-3)-8)
# Time spent in displacement [s]
variable 			t_displace equal ${press_displace}*10^-3/abs(${pressVel})


# timeSteps for one simulation second
variable 			tsInAsecond equal 1e6/${timestep}

# Dump every ... (fps => frames per second in animation)
variable 			100fps equal ceil(${tsInAsecond}/100)
variable 			1000fps equal ceil(${tsInAsecond}/1000)


###########################################################
# Cuantos segundos dura la simulacion?
variable 			runUpTo1 equal ceil(${t_displace}*${tsInAsecond})
###########################################################



# Preliminaries
units				micro
atom_style			sphere
atom_modify			map array
boundary 			f f f
newton 				off
communicate			single vel yes
processors			* * 1   # Distribute processes within XY plane

# Declare domain
region				domain cylinder z 0 0 ${dom_radius} ${zlo} ${zhi} units box
create_box 			3 domain

# log name
log 				${log_name} append

# Neighbor listing 
neighbor 			${skin} bin
neigh_modify		delay 0 


### Setup
# Material and interaction properties required
fix 				m1 all property/global youngsModulus peratomtype ${E_MgO} ${E_Al2O3} ${E_stainlessSteel}
fix 				m2 all property/global poissonsRatio peratomtype ${nu_MgO} ${nu_Al2O3} ${nu_stainlessSteel}
fix 				m3 all property/global coefficientRestitution peratomtypepair 3 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 
fix 				m4 all property/global coefficientFriction peratomtypepair 3 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2
fix 				m6 all property/global cohesionEnergyDensity peratomtypepair 3 ${CED_MgO} ${CED_MgO} ${CED_MgO} ${CED_MgO} ${CED_MgO} ${CED_MgO} ${CED_MgO} ${CED_MgO} ${CED_MgO}



# Particle insertion
###################################################################################################
##########################
# Uniform mass insertion #
##########################


fix ptsMgO_4 all particletemplate/sphere 1 atom_type 1 density constant ${rho_MgO} radius constant ${rMgO_4}
fix ptsMgO_5 all particletemplate/sphere 1 atom_type 1 density constant ${rho_MgO} radius constant ${rMgO_5}
fix ptsMgO_6 all particletemplate/sphere 1 atom_type 1 density constant ${rho_MgO} radius constant ${rMgO_6}
fix ptsMgO_7 all particletemplate/sphere 1 atom_type 1 density constant ${rho_MgO} radius constant ${rMgO_7}
fix ptsMgO_8 all particletemplate/sphere 1 atom_type 1 density constant ${rho_MgO} radius constant ${rMgO_8}
fix ptsMgO_9 all particletemplate/sphere 1 atom_type 1 density constant ${rho_MgO} radius constant ${rMgO_9}
fix ptsMgO_10 all particletemplate/sphere 1 atom_type 1 density constant ${rho_MgO} radius constant ${rMgO_10}

fix ptsAl2O3_1 all particletemplate/sphere 1 atom_type 2 density constant ${rho_Al2O3} radius constant ${rAl2O3_1}


fix pdd1 all particledistribution/discrete/numberbased 5430 8 ptsMgO_4 ${porcenMgO_4} ptsMgO_5 ${porcenMgO_5} ptsMgO_6 ${porcenMgO_6} ptsMgO_7 ${porcenMgO_7} ptsMgO_8 ${porcenMgO_8} ptsMgO_9 ${porcenMgO_9} ptsMgO_10 ${porcenMgO_10} ptsAl2O3_1 ${porcenAl2O3_1}

###################################################################################################


# Factory
region 				factory cylinder z 0 0 ${R_in} ${z_lo2} ${z_hi2} units box

fix 				ins1 all insert/pack seed 1001 distributiontemplate pdd1 insert_every once overlapcheck yes maxattempt 2000 particles_in_region ${Nparticles} region factory ntry_mc 1000000 


# Import mesh from cad:
fix 				cad0 all mesh/surface file meshes/base0.stl type 3 scale ${scale}
fix 				cad1 all mesh/surface file meshes/plato_8mm_22mm.stl type 3 scale ${scale}
fix 				press all mesh/surface/stress file meshes/prensa_22mm_0.stl type 3 scale ${scale} move 0 0 ${z_press} stress on
fix 				move all move/mesh mesh press linear 0. 0. ${pressVel}

# Forces on press face
# [picogram*micron*microsecond-2]*10^-9 => [kg*m*s-2] == [N]
variable 			ForceX equal ceil(f_press[1]*1e-9)
variable 			ForceY equal ceil(f_press[2]*1e-9)
variable 			ForceZ equal ceil(f_press[3]*1e-9)

# Wall position [mm]
variable 			WallZ  equal (f_press[9]*1e-3)

# Use the imported mesh as granular wall
fix 				granwalls all wall/gran model hertz tangential history  mesh n_meshes 3 meshes cad0 cad1 press

# Cylinder wall
fix 				cylinder_wall all wall/gran model hertz tangential history primitive type 3 zcylinder ${cylin_radius} 0 0

# Define the physics
pair_style 			gran model hertz tangential history cohesion sjkr
pair_coeff			* *

# Integrator
fix					integrate all nve/sphere

# Gravity
fix 				grav all gravity ${gravity} vector 0.0 0.0 -1.0

# Time step
timestep 			${timestep}

# Thermodynamic output settings
thermo_style		custom step atoms ke time cpu
thermo 				1000
thermo_modify 		norm no lost ignore  # ignore lost particles

# Restart doc; replace itself everytime
restart 			${1000fps} poly.restart poly.restart

# Check RayleighTime and HertzTime every 1000 steps if > 0.2
fix 				ctg all check/timestep/gran 1000 0.2 0.2 
run 1

# Initialize dump files
dump				dmp all custom ${1000fps} post/dump*.pruebas id type x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius mass
fix 				dumpText all print 10 "${ForceX} ${ForceY} ${ForceZ} ${WallZ}" screen no title "Fx[N] Fy[N] Fz[N] Z[mm]" file fuerzasPrensa1.txt
dump 				dmpstl all mesh/stl ${1000fps} post/dump*.stl


#run
run 				${runUpTo1}

